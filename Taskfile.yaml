# https://taskfile.dev

version: '3'

tasks:
  default:
    cmds:
      - task: run

  build:
    desc: "Build gurl binary"
    cmds:
      - bash scripts/version.sh
      - defer: git checkout internal/version/version.go
      - "{{.ENV}} go build -v -o bin/gurl{{.SUFFIX}} cmd/gurl/main.go"

  run:
    desc: "Compiles and runs gurl"
    cmds:
      - go run -v cmd/gurl/main.go {{.CLI_ARGS}}

  release:
    desc: "Build binaries for different architectures"
    cmds:
      - task: build
        vars:
          SUFFIX: "_darwin_amd64"
          ENV: "GOOS=darwin GOARCH=amd64"
      - task: build
        vars:
          SUFFIX: "_darwin_arm64"
          ENV: "GOOS=darwin GOARCH=arm64"
      - task: build
        vars:
          SUFFIX: "_linux_amd64"
          ENV: "GOOS=linux GOARCH=amd64"
      - task: build
        vars:
          SUFFIX: "_linux_arm64"
          ENV: "GOOS=linux GOARCH=arm64"
      - task: build
        vars:
          SUFFIX: "_windows_amd64.exe"
          ENV: "GOOS=windows GOARCH=amd64"
      - task: build
        vars:
          SUFFIX: "_windows_arm64.exe"
          ENV: "GOOS=windows GOARCH=arm64"

  test:
    desc: "Run unit tests"
    deps:
      - mockgen
    cmds:
      - go test -v -cover ./...

  lint:
    desc: "Run staticcheck linter"
    preconditions:
      - sh: which staticcheck
        msg: staticcheck is not installed!
    deps:
      - mockgen
    cmds:
      - staticcheck -checks all,-ST1000,-ST1022,-ST1003 ./...
      
  bundle:
    desc:
      Builds binaries for different architectures and bundles the 
      current directory into a gzipped tarball.
    deps:
      - release
    cmds:
      - tar -czvf gurl.tar.gz $(ls -a1 | grep -v "^\.\.$" | grep -v "^\.$")

  mockgen:
    preconditions:
      - sh: which mockgen
        msg: mockgen is not installed!
    cmds:
      - '[ -d mocks ] || mkdir mocks'
      - mockgen -package mocks io/fs FS,File,FileInfo > mocks/fs.go