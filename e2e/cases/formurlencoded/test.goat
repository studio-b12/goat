POST {{.instance}}/

[FormUrlEncoded]
someString = "some string"
someInt = 42
someBool = true

[Script]
var contentType = response.Body.headers["Content-Type"][0];
assert(contentType, 'application/x-www-form-urlencoded', `Invalid Content-Type header: ${contentType}`);
info(response.Body.body_string);

---

// Paramter Substitution

POST {{.instance}}/

[PreScript]
var someOtherString = "some other string";
var someOtherInt = 43;

[FormUrlEncoded]
someString = "{{.someOtherString}}"
someInt = {{.someOtherInt}}
someBool = true

[Script]
var contentType = response.Body.headers["Content-Type"][0];
assert(contentType, 'application/x-www-form-urlencoded', `Invalid Content-Type header: ${contentType}`);
const fields = Object.fromEntries(response.Body.body_string.split("&").map((kv) => kv.split("=")));
assert_eq(fields.someString, "some+other+string", "value of someString");
assert_eq(fields.someInt, "43", "value of someInt");
assert_eq(fields.someBool, "true", "value of someBool");